import prettier from 'prettier';
import { OpenAPI3 } from './types';

export const WARNING_MESSAGE = `/**
 * This file was auto-generated by swagger-to-ts.
 * Do not make direct changes to the file.
 */
`;

export const PRETTIER_OPTIONS: prettier.Options = { parser: 'typescript', singleQuote: true };

export default function generateTypesV3(schema: OpenAPI3): string {
  if (!schema.components || !schema.components.schemas) {
    throw new Error(`🧐 Components Object missing from schema https://swagger.io/specification`);
  }

  // 1st pass: expand $refs first to reduce lookups & prevent circular refs
  const expandedRefs = JSON.parse(JSON.stringify(schema.components.schemas), (_, node) => {
    // TODO: if a node has a $ref, then convert "#/components/schemas/<$ref>" -> components['schemas']['<$ref>']

    return node;
  });

  // 2nd pass: support primitives
  const primitives = JSON.parse(JSON.stringify(expandedRefs), (_, node) => {
    // TODO: convert `{ some_key: { type: "string" } }` -> `{ some_key: string }`

    return node;
  });

  return prettier.format(
    `${WARNING_MESSAGE}\n\n\nexport interface components {
      schemas: {
        ${JSON.stringify(primitives)}
      };
    }`,
    PRETTIER_OPTIONS
  );
}
